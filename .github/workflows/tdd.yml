name: CI Build
on:
  push:
    branches:
      - main 
  pull_request:
    branches:
      - main 

jobs:
  build:
    runs-on: ubuntu-latest
    container: python:3.9-slim

    # Requiired services    
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:alpine
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
            
      - name: Install dependencies
        run: | 
          apt-get update
          apt-get install -y gcc libpq-dev
          python -m pip install --upgrade pip wheel
          pip install -r requirements.txt

      - name: Linting
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests with nose
        run: nosetests
        env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432
          FLASK_APP: service:app
          FLASK_ENV: development
          GUNICORN_BIND: "0.0.0.0:8000"
          DATABASE_URI: postgresql://postgres:postgres@postgres:5432/postgres

      # Uncomment the following 2 lines during hands-on lab
      
      - name: Upload code coverage
        uses: codecov/codecov-action@v2
        with:
          version: "v0.1.13"      
  